#!/usr/bin/env node

var fs = require('fs'),
  path = require('path')
  LogTail = require('../lib/log-tailer'),
  mkdirp = require('mkdirp');


var configPath = process.argv[2];

if (!configPath)
  throw new Error('config file path argument not found');

if (!fs.existsSync(configPath))
  throw new Error('cannot find config file ');


var configstring = fs.readFileSync(configPath, 'utf-8');
var config = JSON.parse(configstring);
if (!config) {
  throw new Error('unable to parse config file');
}

var LoggingServiceManager = require('../lib/logging-service-manager');
var loggingmanager = new LoggingServiceManager();

var logFilesList = config.logger.logFiles;

for (var type in logFilesList) {
  var logfilename = logFilesList[type];
  if (!fs.existsSync(logfilename)) { //create file if it does not exist
    mkdirp.sync(path.dirname(logfilename));
    fs.writeFileSync(logfilename, "");
  }
  var logtail = new LogTail(type, logfilename, {
    interval: config.watchFileInterval
  });
  loggingmanager.registerlLogTailer(logtail);
}

var servicesList = config.logger.services;
// console.log(servicesList);
for (var servicename in servicesList) {
  var Service = require('../lib/logservices/' + servicename);
  var serviceConfig = servicesList[servicename];
  var service = new Service(serviceConfig);
  loggingmanager.registerService(service);
}